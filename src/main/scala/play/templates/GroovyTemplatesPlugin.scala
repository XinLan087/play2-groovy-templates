package play.templates

import play.api._
import libs.Files
import org.reflections._
import scala.collection.JavaConverters._
import collection.mutable.HashMap
import java.util.ArrayList
import java.util.concurrent.ConcurrentHashMap
import java.io.File

/**
 * Plugin for rendering Groovy templates
 *
 * @author Manuel Bernhardt <bernhardt.manuel@gmail.com>
 */

class GroovyTemplatesPlugin(app: Application) extends Plugin {

  override def enabled = true

  var engine: TemplateEngine = null

  var allClassesMetadata: Reflections = null

  var assignableClassesCache = new HashMap[Class[_], ArrayList[Class[_]]]

  var allClassesCache = new ArrayList[Class[_]]


  override def onStart {
    engine = new Play2TemplateEngine
    engine.startup()
    
    // cache lookup of classes
    // the template engine needs this to allow static access to classes with "nice" names (without the $'s)
    allClassesMetadata = new Reflections(new util.ConfigurationBuilder()
      .addUrls(util.ClasspathHelper.forJavaClassPath())
      .setScanners(new AllTypesScanner, new scanners.SubTypesScanner))

    Logger("play").debug("Found %s classes".format(allClassesMetadata.getStore.getKeysCount))

    getAllClasses

    if(TemplateEngine.utils.usePrecompiled()) {
      Logger("play").info("Precompiling...")
      try {
        GenericTemplateLoader.getAllTemplate
      } catch {
        case t => TemplateEngine.engine.handleException(t);
      }
    }

    CustomGroovy()

    Logger("play").info("Groovy template engine started")
  }

  override def onStop {
    Logger("play").info("Stopping Groovy template engine")
  }

  def getAssignableClasses(clazz: Class[_]) = {
    if (assignableClassesCache.contains(clazz)) {
      assignableClassesCache(clazz)
    } else {
      val assignableClasses = allClassesMetadata.getSubTypesOf(clazz)
      val list = new ArrayList[Class[_]]()
      list.addAll(assignableClasses)
      assignableClassesCache.put(clazz, list)
      list
    }
  }

  def getAllClasses = {
    if(allClassesCache.isEmpty) {
      val classes = allClassesMetadata.getStore.get(classOf[AllTypesScanner]).keySet()
//      Files.writeFile(new File("/tmp/foobar"), classes.asScala.mkString("\n"))
      val toLoad = classes.asScala.filter(c => Seq(
"jline.ANSIBuffer",
"jline.ANSIBuffer$ANSICodes",
"jline.ArgumentCompletor",
"jline.ArgumentCompletor$AbstractArgumentDelimiter",
"jline.ArgumentCompletor$ArgumentDelimiter",
"jline.ArgumentCompletor$ArgumentList",
"jline.ArgumentCompletor$WhitespaceArgumentDelimiter",
"jline.CandidateCycleCompletionHandler",
"jline.CandidateListCompletionHandler",
"jline.ClassNameCompletor",
"jline.CompletionHandler",
"jline.Completor",
"jline.ConsoleOperations",
"jline.ConsoleReader",
"jline.ConsoleReaderInputStream",
"jline.ConsoleReaderInputStream$ConsoleEnumeration",
"jline.ConsoleReaderInputStream$ConsoleLineInputStream",
"jline.ConsoleRunner",
"jline.CursorBuffer",
"jline.FileNameCompletor",
"jline.History",
"jline.MultiCompletor",
"jline.NullCompletor",
"jline.SimpleCompletor",
"jline.SimpleCompletor$NoOpFilter",
"jline.SimpleCompletor$SimpleCompletorFilter",
"jline.Terminal",
"jline.UnixTerminal",
"jline.UnixTerminal$1",
"jline.UnixTerminal$ReplayPrefixOneCharInputStream",
"jline.UnsupportedTerminal",
"jline.UnsupportedTerminal$1",
"jline.WindowsTerminal",
"jline.WindowsTerminal$1",
"jline.WindowsTerminal$ReplayPrefixOneCharInputStream",
"org.apache.ivy.Ivy",
"org.apache.ivy.Ivy$1",
"org.apache.ivy.core.IvyContext",
"org.apache.ivy.core.IvyPatternHelper",
"org.apache.ivy.core.IvyPatternHelper$OriginalArtifactNameValue",
"org.apache.ivy.core.LogOptions",
"org.apache.ivy.core.NormalRelativeUrlResolver",
"org.apache.ivy.core.RelativeUrlResolver",
"org.apache.ivy.core.cache.ArtifactOrigin",
"org.apache.ivy.core.cache.CacheDownloadOptions",
"org.apache.ivy.core.cache.CacheMetadataOptions",
"org.apache.ivy.core.cache.DefaultRepositoryCacheManager",
"org.apache.ivy.core.cache.DefaultRepositoryCacheManager$1",
"org.apache.ivy.core.cache.DefaultRepositoryCacheManager$BackupResourceDownloader",
"org.apache.ivy.core.cache.DefaultResolutionCacheManager",
"org.apache.ivy.core.cache.DownloadListener",
"org.apache.ivy.core.cache.ModuleDescriptorMemoryCache",
"org.apache.ivy.core.cache.ModuleDescriptorMemoryCache$CacheEntry",
"org.apache.ivy.core.cache.ModuleDescriptorProvider",
"org.apache.ivy.core.cache.ModuleDescriptorWriter",
"org.apache.ivy.core.cache.ParserSettingsMonitor",
"org.apache.ivy.core.cache.ParserSettingsMonitor$1",
"org.apache.ivy.core.cache.RepositoryCacheManager",
"org.apache.ivy.core.cache.ResolutionCacheManager",
"org.apache.ivy.core.deliver.DeliverEngine",
"org.apache.ivy.core.event.EventManager",
"org.apache.ivy.core.event.FilteredIvyListener",
"org.apache.ivy.core.event.IvyEvent",
"org.apache.ivy.core.event.IvyListener",
"org.apache.ivy.core.event.download.DownloadEvent",
"org.apache.ivy.core.event.download.EndArtifactDownloadEvent",
"org.apache.ivy.core.event.download.NeedArtifactEvent",
"org.apache.ivy.core.event.download.PrepareDownloadEvent",
"org.apache.ivy.core.event.download.StartArtifactDownloadEvent",
"org.apache.ivy.core.event.resolve.EndResolveDependencyEvent",
"org.apache.ivy.core.event.resolve.ResolveDependencyEvent",
"org.apache.ivy.core.event.resolve.ResolveEvent",
"org.apache.ivy.core.event.resolve.StartResolveDependencyEvent",
"org.apache.ivy.core.event.retrieve.EndRetrieveArtifactEvent",
"org.apache.ivy.core.event.retrieve.RetrieveEvent",
"org.apache.ivy.core.module.descriptor.AbstractArtifact",
"org.apache.ivy.core.module.descriptor.AbstractIncludeExcludeRule",
"org.apache.ivy.core.module.descriptor.Artifact",
"org.apache.ivy.core.module.descriptor.Configuration",
"org.apache.ivy.core.module.descriptor.Configuration$Visibility",
"org.apache.ivy.core.module.descriptor.ConfigurationAware",
"org.apache.ivy.core.module.descriptor.ConfigurationGroup",
"org.apache.ivy.core.module.descriptor.ConfigurationIntersection",
"org.apache.ivy.core.module.descriptor.DefaultArtifact",
"org.apache.ivy.core.module.descriptor.DefaultDependencyArtifactDescriptor",
"org.apache.ivy.core.module.descriptor.DefaultDependencyDescriptor",
"org.apache.ivy.core.module.descriptor.DefaultExcludeRule",
"org.apache.ivy.core.module.descriptor.DefaultIncludeRule",
"org.apache.ivy.core.module.descriptor.DefaultModuleDescriptor",
"org.apache.ivy.core.module.descriptor.DependencyArtifactDescriptor",
"org.apache.ivy.core.module.descriptor.DependencyDescriptor",
"org.apache.ivy.core.module.descriptor.DependencyDescriptorMediator",
"org.apache.ivy.core.module.descriptor.ExcludeRule",
"org.apache.ivy.core.module.descriptor.ExtendsDescriptor",
"org.apache.ivy.core.module.descriptor.IncludeRule",
"org.apache.ivy.core.module.descriptor.InheritableItem",
"org.apache.ivy.core.module.descriptor.License",
"org.apache.ivy.core.module.descriptor.MDArtifact",
"org.apache.ivy.core.module.descriptor.ModuleDescriptor",
"org.apache.ivy.core.module.descriptor.OverrideDependencyDescriptorMediator",
"org.apache.ivy.core.module.id.ArtifactId",
"org.apache.ivy.core.module.id.ArtifactRevisionId",
"org.apache.ivy.core.module.id.ModuleId",
"org.apache.ivy.core.module.id.ModuleRevisionId",
"org.apache.ivy.core.module.id.ModuleRules",
"org.apache.ivy.core.module.status.Status",
"org.apache.ivy.core.module.status.StatusManager",
"org.apache.ivy.core.publish.PublishEngine",
"org.apache.ivy.core.report.ArtifactDownloadReport",
"org.apache.ivy.core.report.ConfigurationResolveReport",
"org.apache.ivy.core.report.DownloadReport",
"org.apache.ivy.core.report.DownloadStatus",
"org.apache.ivy.core.report.MetadataArtifactDownloadReport",
"org.apache.ivy.core.report.ResolveReport",
"org.apache.ivy.core.repository.RepositoryManagementEngine",
"org.apache.ivy.core.resolve.DownloadOptions",
"org.apache.ivy.core.resolve.IvyNode",
"org.apache.ivy.core.resolve.IvyNodeBlacklist",
"org.apache.ivy.core.resolve.IvyNodeCallers",
"org.apache.ivy.core.resolve.IvyNodeCallers$Caller",
"org.apache.ivy.core.resolve.IvyNodeEviction",
"org.apache.ivy.core.resolve.IvyNodeEviction$EvictionData",
"org.apache.ivy.core.resolve.IvyNodeEviction$ModuleIdConf",
"org.apache.ivy.core.resolve.IvyNodeUsage",
"org.apache.ivy.core.resolve.IvyNodeUsage$Depender",
"org.apache.ivy.core.resolve.IvyNodeUsage$NodeConf",
"org.apache.ivy.core.resolve.ResolveData",
"org.apache.ivy.core.resolve.ResolveEngine",
"org.apache.ivy.core.resolve.ResolveEngineSettings",
"org.apache.ivy.core.resolve.ResolveOptions",
"org.apache.ivy.core.resolve.ResolveProcessException",
"org.apache.ivy.core.resolve.ResolvedModuleRevision",
"org.apache.ivy.core.resolve.RestartResolveProcess",
"org.apache.ivy.core.resolve.VisitData",
"org.apache.ivy.core.resolve.VisitNode",
"org.apache.ivy.core.retrieve.RetrieveEngine",
"org.apache.ivy.core.retrieve.RetrieveEngine$1",
"org.apache.ivy.core.retrieve.RetrieveEngineSettings",
"org.apache.ivy.core.retrieve.RetrieveOptions",
"org.apache.ivy.core.search.SearchEngine",
"org.apache.ivy.core.settings.IvySettings",
"org.apache.ivy.core.settings.IvySettings$1",
"org.apache.ivy.core.settings.IvySettings$2",
"org.apache.ivy.core.settings.IvySettings$3",
"org.apache.ivy.core.settings.IvySettings$4",
"org.apache.ivy.core.settings.IvySettings$ModuleSettings",
"org.apache.ivy.core.settings.IvyVariableContainer",
"org.apache.ivy.core.settings.IvyVariableContainerImpl",
"org.apache.ivy.core.settings.Validatable",
"org.apache.ivy.core.settings.XmlSettingsParser",
"org.apache.ivy.core.settings.XmlSettingsParser$1",
"org.apache.ivy.core.settings.XmlSettingsParser$IvyVariableContainerWrapper",
"org.apache.ivy.core.sort.CollectionOfModulesToSort",
"org.apache.ivy.core.sort.MessageBasedNonMatchingVersionReporter",
"org.apache.ivy.core.sort.ModuleDescriptorSorter",
"org.apache.ivy.core.sort.ModuleInSort",
"org.apache.ivy.core.sort.NonMatchingVersionReporter",
"org.apache.ivy.core.sort.SilentNonMatchingVersionReporter",
"org.apache.ivy.core.sort.SortEngine",
"org.apache.ivy.core.sort.SortEngineSettings",
"org.apache.ivy.core.sort.SortOptions",
"org.apache.ivy.core.sort.WarningNonMatchingVersionReporter",
"org.apache.ivy.plugins.IvySettingsAware",
"org.apache.ivy.plugins.circular.AbstractCircularDependencyStrategy",
"org.apache.ivy.plugins.circular.AbstractLogCircularDependencyStrategy",
"org.apache.ivy.plugins.circular.CircularDependencyException",
"org.apache.ivy.plugins.circular.CircularDependencyStrategy",
"org.apache.ivy.plugins.circular.ErrorCircularDependencyStrategy",
"org.apache.ivy.plugins.circular.IgnoreCircularDependencyStrategy",
"org.apache.ivy.plugins.circular.WarnCircularDependencyStrategy",
"org.apache.ivy.plugins.conflict.AbstractConflictManager",
"org.apache.ivy.plugins.conflict.ConflictManager",
"org.apache.ivy.plugins.conflict.FixedConflictManager",
"org.apache.ivy.plugins.conflict.LatestCompatibleConflictManager",
"org.apache.ivy.plugins.conflict.LatestConflictManager",
"org.apache.ivy.plugins.conflict.LatestConflictManager$IvyNodeArtifactInfo",
"org.apache.ivy.plugins.conflict.LatestConflictManager$NoConflictResolvedYetException",
"org.apache.ivy.plugins.conflict.NoConflictManager",
"org.apache.ivy.plugins.conflict.StrictConflictException",
"org.apache.ivy.plugins.conflict.StrictConflictManager",
"org.apache.ivy.plugins.latest.AbstractLatestStrategy",
"org.apache.ivy.plugins.latest.ArtifactInfo",
"org.apache.ivy.plugins.latest.ComparatorLatestStrategy",
"org.apache.ivy.plugins.latest.LatestLexicographicStrategy",
"org.apache.ivy.plugins.latest.LatestLexicographicStrategy$1",
"org.apache.ivy.plugins.latest.LatestRevisionStrategy",
"org.apache.ivy.plugins.latest.LatestRevisionStrategy$ArtifactInfoComparator",
"org.apache.ivy.plugins.latest.LatestRevisionStrategy$MridComparator",
"org.apache.ivy.plugins.latest.LatestStrategy",
"org.apache.ivy.plugins.latest.LatestTimeStrategy",
"org.apache.ivy.plugins.latest.LatestTimeStrategy$1",
"org.apache.ivy.plugins.lock.AbstractLockStrategy",
"org.apache.ivy.plugins.lock.ArtifactLockStrategy",
"org.apache.ivy.plugins.lock.FileBasedLockStrategy",
"org.apache.ivy.plugins.lock.FileBasedLockStrategy$FileLocker",
"org.apache.ivy.plugins.lock.LockStrategy",
"org.apache.ivy.plugins.lock.NoLockStrategy",
"org.apache.ivy.plugins.matcher.AbstractPatternMatcher",
"org.apache.ivy.plugins.matcher.AnyMatcher",
"org.apache.ivy.plugins.matcher.ExactOrRegexpPatternMatcher",
"org.apache.ivy.plugins.matcher.ExactOrRegexpPatternMatcher$ExactOrRegexpMatcher",
"org.apache.ivy.plugins.matcher.ExactPatternMatcher",
"org.apache.ivy.plugins.matcher.ExactPatternMatcher$ExactMatcher",
"org.apache.ivy.plugins.matcher.MapMatcher",
"org.apache.ivy.plugins.matcher.Matcher",
"org.apache.ivy.plugins.matcher.NoMatcher",
"org.apache.ivy.plugins.matcher.PatternMatcher",
"org.apache.ivy.plugins.matcher.RegexpPatternMatcher",
"org.apache.ivy.plugins.matcher.RegexpPatternMatcher$RegexpMatcher",
"org.apache.ivy.plugins.namespace.MRIDRule",
"org.apache.ivy.plugins.namespace.MRIDTransformationRule",
"org.apache.ivy.plugins.namespace.MRIDTransformationRule$MridRuleMatcher",
"org.apache.ivy.plugins.namespace.Namespace",
"org.apache.ivy.plugins.namespace.Namespace$1",
"org.apache.ivy.plugins.namespace.Namespace$2",
"org.apache.ivy.plugins.namespace.NamespaceRule",
"org.apache.ivy.plugins.namespace.NamespaceTransformer",
"org.apache.ivy.plugins.parser.AbstractModuleDescriptorParser$AbstractParser",
"org.apache.ivy.plugins.parser.ModuleDescriptorParser",
"org.apache.ivy.plugins.parser.ModuleDescriptorParserRegistry",
"org.apache.ivy.plugins.parser.ParserSettings",
"org.apache.ivy.plugins.parser.m2.DefaultPomDependencyMgt",
"org.apache.ivy.plugins.parser.m2.PomDependencyMgt",
"org.apache.ivy.plugins.parser.m2.PomModuleDescriptorBuilder",
"org.apache.ivy.plugins.parser.m2.PomModuleDescriptorBuilder$1",
"org.apache.ivy.plugins.parser.m2.PomModuleDescriptorBuilder$2",
"org.apache.ivy.plugins.parser.m2.PomModuleDescriptorBuilder$3",
"org.apache.ivy.plugins.parser.m2.PomModuleDescriptorBuilder$4",
"org.apache.ivy.plugins.parser.m2.PomModuleDescriptorBuilder$5",
"org.apache.ivy.plugins.parser.m2.PomModuleDescriptorBuilder$ConfMapper",
"org.apache.ivy.plugins.parser.m2.PomModuleDescriptorBuilder$PomPluginElement",
"org.apache.ivy.plugins.parser.m2.PomModuleDescriptorParser",
"org.apache.ivy.plugins.parser.m2.PomReader",
"org.apache.ivy.plugins.parser.m2.PomReader$1",
"org.apache.ivy.plugins.parser.m2.PomReader$AddDTDFilterInputStream",
"org.apache.ivy.plugins.parser.m2.PomReader$PomDependencyData",
"org.apache.ivy.plugins.parser.m2.PomReader$PomDependencyMgtElement",
"org.apache.ivy.plugins.parser.m2.PomReader$PomPluginElement",
"org.apache.ivy.plugins.parser.xml.UpdateOptions",
"org.apache.ivy.plugins.parser.xml.XmlModuleDescriptorParser",
"org.apache.ivy.plugins.parser.xml.XmlModuleDescriptorParser$Parser",
"org.apache.ivy.plugins.parser.xml.XmlModuleDescriptorUpdater",
"org.apache.ivy.plugins.parser.xml.XmlModuleDescriptorUpdater$ExtendedBuffer",
"org.apache.ivy.plugins.parser.xml.XmlModuleDescriptorUpdater$UpdaterHandler",
"org.apache.ivy.plugins.parser.xml.XmlModuleDescriptorUpdater$UpdaterHandler$1",
"org.apache.ivy.plugins.parser.xml.XmlModuleDescriptorWriter",
"org.apache.ivy.plugins.report.LogReportOutputter",
"org.apache.ivy.plugins.report.ReportOutputter",
"org.apache.ivy.plugins.report.XmlReportOutputter",
"org.apache.ivy.plugins.report.XmlReportParser",
"org.apache.ivy.plugins.report.XmlReportParser$SaxXmlReportParser",
"org.apache.ivy.plugins.report.XmlReportParser$SaxXmlReportParser$XmlReportParserHandler",
"org.apache.ivy.plugins.report.XmlReportWriter",
"org.apache.ivy.plugins.repository.AbstractRepository",
"org.apache.ivy.plugins.repository.ArtifactResourceResolver",
"org.apache.ivy.plugins.repository.Repository",
"org.apache.ivy.plugins.repository.RepositoryCopyProgressListener",
"org.apache.ivy.plugins.repository.Resource",
"org.apache.ivy.plugins.repository.ResourceDownloader",
"org.apache.ivy.plugins.repository.TransferEvent",
"org.apache.ivy.plugins.repository.TransferListener",
"org.apache.ivy.plugins.repository.file.FileRepository",
"org.apache.ivy.plugins.repository.file.FileResource",
"org.apache.ivy.plugins.repository.url.URLRepository",
"org.apache.ivy.plugins.repository.url.URLResource",
"org.apache.ivy.plugins.resolver.AbstractPatternsBasedResolver",
"org.apache.ivy.plugins.resolver.AbstractResolver",
"org.apache.ivy.plugins.resolver.AbstractResolver$1",
"org.apache.ivy.plugins.resolver.AbstractResolver$ResolverParserSettings",
"org.apache.ivy.plugins.resolver.BasicResolver",
"org.apache.ivy.plugins.resolver.BasicResolver$1",
"org.apache.ivy.plugins.resolver.BasicResolver$2",
"org.apache.ivy.plugins.resolver.BasicResolver$3",
"org.apache.ivy.plugins.resolver.BasicResolver$5",
"org.apache.ivy.plugins.resolver.BasicResolver$6",
"org.apache.ivy.plugins.resolver.BasicResolver$UnresolvedDependencyException",
"org.apache.ivy.plugins.resolver.CacheResolver",
"org.apache.ivy.plugins.resolver.ChainResolver",
"org.apache.ivy.plugins.resolver.ChainResolver$ResolvedModuleRevisionArtifactInfo",
"org.apache.ivy.plugins.resolver.DependencyResolver",
"org.apache.ivy.plugins.resolver.FileSystemResolver",
"org.apache.ivy.plugins.resolver.IBiblioResolver",
"org.apache.ivy.plugins.resolver.IBiblioResolver$1",
"org.apache.ivy.plugins.resolver.IBiblioResolver$2",
"org.apache.ivy.plugins.resolver.RepositoryResolver",
"org.apache.ivy.plugins.resolver.ResolverSettings",
"org.apache.ivy.plugins.resolver.URLResolver",
"org.apache.ivy.plugins.resolver.util.HasLatestStrategy",
"org.apache.ivy.plugins.resolver.util.MDResolvedResource",
"org.apache.ivy.plugins.resolver.util.ResolvedResource",
"org.apache.ivy.plugins.resolver.util.ResourceMDParser",
"org.apache.ivy.plugins.trigger.Trigger",
"org.apache.ivy.plugins.version.AbstractVersionMatcher",
"org.apache.ivy.plugins.version.ChainVersionMatcher",
"org.apache.ivy.plugins.version.ExactVersionMatcher",
"org.apache.ivy.plugins.version.LatestVersionMatcher",
"org.apache.ivy.plugins.version.SubVersionMatcher",
"org.apache.ivy.plugins.version.VersionMatcher",
"org.apache.ivy.plugins.version.VersionRangeMatcher",
"org.apache.ivy.plugins.version.VersionRangeMatcher$1",
"org.apache.ivy.plugins.version.VersionRangeMatcher$MRIDArtifactInfo",
"org.apache.ivy.util.AbstractMessageLogger",
"org.apache.ivy.util.ChecksumHelper",
"org.apache.ivy.util.ConfigurationUtils",
"org.apache.ivy.util.Configurator",
"org.apache.ivy.util.Configurator$Attribute",
"org.apache.ivy.util.Configurator$Element",
"org.apache.ivy.util.Configurator$Macro",
"org.apache.ivy.util.Configurator$MacroDef",
"org.apache.ivy.util.Configurator$MacroRecord",
"org.apache.ivy.util.Configurator$ObjectDescriptor",
"org.apache.ivy.util.ContextualSAXHandler",
"org.apache.ivy.util.CopyProgressEvent",
"org.apache.ivy.util.CopyProgressListener",
"org.apache.ivy.util.Credentials",
"org.apache.ivy.util.DefaultMessageLogger",
"org.apache.ivy.util.FileResolver",
"org.apache.ivy.util.FileResolver$1",
"org.apache.ivy.util.FileUtil",
"org.apache.ivy.util.HostUtil",
"org.apache.ivy.util.Message",
"org.apache.ivy.util.MessageLogger",
"org.apache.ivy.util.MessageLoggerEngine",
"org.apache.ivy.util.PropertiesFile",
"org.apache.ivy.util.StringUtils",
"org.apache.ivy.util.XMLHelper",
"org.apache.ivy.util.extendable.DefaultExtendableItem",
"org.apache.ivy.util.extendable.ExtendableItem",
"org.apache.ivy.util.extendable.UnmodifiableExtendableItem",
"org.apache.ivy.util.filter.Filter",
"org.apache.ivy.util.filter.FilterHelper",
"org.apache.ivy.util.filter.NoFilter",
"org.apache.ivy.util.url.AbstractURLHandler",
"org.apache.ivy.util.url.ApacheURLLister",
"org.apache.ivy.util.url.BasicURLHandler",
"org.apache.ivy.util.url.CredentialsStore",
"org.apache.ivy.util.url.HttpClientHandler",
"org.apache.ivy.util.url.HttpClientHandler$1",
"org.apache.ivy.util.url.HttpClientHandler$HttpClientHelper",
"org.apache.ivy.util.url.HttpClientHandler$HttpClientHelper2x",
"org.apache.ivy.util.url.HttpClientHandler$HttpClientHelper3x",
"org.apache.ivy.util.url.HttpClientHandler$IvyCredentialsProvider",
"org.apache.ivy.util.url.IvyAuthenticator",
"org.apache.ivy.util.url.URLHandler",
"org.apache.ivy.util.url.URLHandler$URLInfo",
"org.apache.ivy.util.url.URLHandlerRegistry",
"scala.Array$",
"scala.Array$$anon$2",
"scala.Console$",
"scala.Equals",
"scala.FallbackArrayBuilding",
"scala.Function0",
"scala.Function1",
"scala.Function1$mcII$sp",
"scala.Function2",
"scala.Function3",
"scala.LowPriorityImplicits",
"scala.MatchError",
"scala.None$",
"scala.Option",
"scala.Option$",
"scala.Option$$anonfun$orNull$1",
"scala.Option$WithFilter",
"scala.Predef$",
"scala.Predef$$anon$3",
"scala.Predef$$anon$4",
"scala.Predef$$eq$colon$eq",
"scala.Predef$$less$colon$less",
"scala.Product",
"scala.Product$$anon$1",
"scala.Product2",
"scala.Product3",
"scala.Product4",
"scala.Proxy",
"scala.Serializable",
"scala.Some",
"scala.SpecializableCompanion",
"scala.Tuple2",
"scala.Tuple3",
"scala.Tuple4",
"scala.collection.GenIterableLike",
"scala.collection.GenMap",
"scala.collection.GenMapLike",
"scala.collection.GenMapLike$$anonfun$liftedTree1$1$1",
"scala.collection.GenSeq",
"scala.collection.GenSeqLike",
"scala.collection.GenSet",
"scala.collection.GenSetLike",
"scala.collection.GenTraversableLike",
"scala.collection.GenTraversableOnce",
"scala.collection.IndexedSeq",
"scala.collection.IndexedSeqLike",
"scala.collection.IndexedSeqLike$Elements",
"scala.collection.IndexedSeqOptimized",
"scala.collection.IndexedSeqOptimized$$anon$1",
"scala.collection.IndexedSeqOptimized$$anonfun$exists$1",
"scala.collection.IndexedSeqOptimized$$anonfun$forall$1",
"scala.collection.Iterable",
"scala.collection.Iterable$",
"scala.collection.IterableLike",
"scala.collection.Iterator",
"scala.collection.Iterator$",
"scala.collection.Iterator$$anon$12",
"scala.collection.Iterator$$anon$18",
"scala.collection.Iterator$$anon$19",
"scala.collection.Iterator$$anon$21",
"scala.collection.Iterator$$anon$3",
"scala.collection.Iterator$$anonfun$toStream$1",
"scala.collection.JavaConversions$",
"scala.collection.JavaConversions$JMapWrapper",
"scala.collection.JavaConversions$JMapWrapperLike$$anon$2",
"scala.collection.JavaConversions$MapWrapper",
"scala.collection.JavaConversions$MapWrapper$$anon$1",
"scala.collection.JavaConversions$MapWrapper$$anon$1$$anon$5",
"scala.collection.JavaConversions$MapWrapper$$anon$1$$anon$5$$anon$6",
"scala.collection.JavaConversions$MutableMapWrapper",
"scala.collection.LinearSeq",
"scala.collection.LinearSeqLike",
"scala.collection.LinearSeqLike$$anon$1",
"scala.collection.LinearSeqOptimized",
"scala.collection.Map$",
"scala.collection.MapLike",
"scala.collection.MapLike$$anon$3",
"scala.collection.MapLike$$anonfun$addString$1",
"scala.collection.MapLike$$anonfun$filterNot$1",
"scala.collection.MapLike$DefaultKeySet",
"scala.collection.MapLike$DefaultKeySet$$anonfun$foreach$1",
"scala.collection.MapLike$DefaultKeySet$$anonfun$foreach$2",
"scala.collection.Parallelizable",
"scala.collection.Seq",
"scala.collection.Seq$",
"scala.collection.SeqLike",
"scala.collection.SeqLike$$anonfun$contains$1",
"scala.collection.SeqLike$$anonfun$distinct$1",
"scala.collection.SeqLike$$anonfun$reverse$1",
"scala.collection.SeqLike$$anonfun$reverse$2",
"scala.collection.Set$",
"scala.collection.SetLike",
"scala.collection.SetLike$$anonfun$$plus$plus$1",
"scala.collection.TraversableLike",
"scala.collection.TraversableLike$$anonfun$filter$1",
"scala.collection.TraversableLike$$anonfun$filterNot$1",
"scala.collection.TraversableLike$$anonfun$flatMap$1",
"scala.collection.TraversableLike$$anonfun$last$1",
"scala.collection.TraversableLike$$anonfun$map$1",
"scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1",
"scala.collection.TraversableOnce",
"scala.collection.TraversableOnce$$anonfun$addString$1",
"scala.collection.TraversableOnce$$anonfun$foldLeft$1",
"scala.collection.TraversableOnce$$anonfun$size$1",
"scala.collection.generic.CanBuildFrom",
"scala.collection.generic.FilterMonadic",
"scala.collection.generic.GenMapFactory",
"scala.collection.generic.GenMapFactory$MapCanBuildFrom",
"scala.collection.generic.GenSeqFactory",
"scala.collection.generic.GenSetFactory",
"scala.collection.generic.GenTraversableFactory",
"scala.collection.generic.GenericCompanion",
"scala.collection.generic.GenericSetTemplate",
"scala.collection.generic.GenericTraversableTemplate",
"scala.collection.generic.Growable",
"scala.collection.generic.Growable$$anonfun$$plus$plus$eq$1",
"scala.collection.generic.ImmutableMapFactory",
"scala.collection.generic.ImmutableSetFactory",
"scala.collection.generic.IterableForwarder",
"scala.collection.generic.MapFactory",
"scala.collection.generic.MutableSetFactory",
"scala.collection.generic.SeqFactory",
"scala.collection.generic.SeqForwarder",
"scala.collection.generic.SetFactory",
"scala.collection.generic.TraversableForwarder",
"scala.collection.immutable.$colon$colon",
"scala.collection.immutable.HashMap",
"scala.collection.immutable.HashMap$",
"scala.collection.immutable.HashMap$EmptyHashMap$",
"scala.collection.immutable.HashMap$HashMap1",
"scala.collection.immutable.HashMap$HashMapCollision1",
"scala.collection.immutable.HashMap$HashMapCollision1$$anonfun$updated0$1",
"scala.collection.immutable.HashMap$HashMapCollision1$$anonfun$updated0$2",
"scala.collection.immutable.HashMap$HashTrieMap",
"scala.collection.immutable.HashMap$HashTrieMap$$anon$1",
"scala.collection.immutable.HashSet",
"scala.collection.immutable.HashSet$",
"scala.collection.immutable.HashSet$EmptyHashSet$",
"scala.collection.immutable.HashSet$HashSet1",
"scala.collection.immutable.HashSet$HashSetCollision1",
"scala.collection.immutable.HashSet$HashSetCollision1$$anonfun$updated0$1",
"scala.collection.immutable.HashSet$HashTrieSet",
"scala.collection.immutable.HashSet$HashTrieSet$$anon$1",
"scala.collection.immutable.IndexedSeq$",
"scala.collection.immutable.Iterable$",
"scala.collection.immutable.List",
"scala.collection.immutable.List$",
"scala.collection.immutable.List$$anonfun$toStream$1",
"scala.collection.immutable.ListMap",
"scala.collection.immutable.ListMap$",
"scala.collection.immutable.ListMap$$anon$1",
"scala.collection.immutable.ListMap$EmptyListMap$",
"scala.collection.immutable.ListMap$Node",
"scala.collection.immutable.ListSet",
"scala.collection.immutable.ListSet$",
"scala.collection.immutable.ListSet$$anon$1",
"scala.collection.immutable.ListSet$EmptyListSet$",
"scala.collection.immutable.ListSet$ListSetBuilder",
"scala.collection.immutable.ListSet$ListSetBuilder$$anonfun$result$1",
"scala.collection.immutable.ListSet$Node",
"scala.collection.immutable.Map",
"scala.collection.immutable.Map$",
"scala.collection.immutable.Map$EmptyMap$",
"scala.collection.immutable.Map$Map1",
"scala.collection.immutable.Map$Map2",
"scala.collection.immutable.Map$Map3",
"scala.collection.immutable.Map$Map4",
"scala.collection.immutable.MapLike",
"scala.collection.immutable.MapLike$ImmutableDefaultKeySet",
"scala.collection.immutable.Nil$",
"scala.collection.immutable.Seq",
"scala.collection.immutable.Seq$",
"scala.collection.immutable.Set",
"scala.collection.immutable.Set$",
"scala.collection.immutable.Set$EmptySet$",
"scala.collection.immutable.Set$Set1",
"scala.collection.immutable.Set$Set2",
"scala.collection.immutable.Set$Set3",
"scala.collection.immutable.Set$Set4",
"scala.collection.immutable.Stream",
"scala.collection.immutable.Stream$",
"scala.collection.immutable.Stream$$anonfun$$plus$plus$1",
"scala.collection.immutable.Stream$$anonfun$1",
"scala.collection.immutable.Stream$$anonfun$append$1",
"scala.collection.immutable.Stream$$anonfun$distinct$1",
"scala.collection.immutable.Stream$$anonfun$distinct$1$$anonfun$apply$1",
"scala.collection.immutable.Stream$$anonfun$filteredTail$1",
"scala.collection.immutable.Stream$$anonfun$flatMap$1",
"scala.collection.immutable.Stream$$anonfun$map$1",
"scala.collection.immutable.Stream$$anonfun$take$1",
"scala.collection.immutable.Stream$$anonfun$take$2",
"scala.collection.immutable.Stream$Cons",
"scala.collection.immutable.Stream$ConsWrapper",
"scala.collection.immutable.Stream$Empty$",
"scala.collection.immutable.Stream$StreamBuilder",
"scala.collection.immutable.Stream$StreamBuilder$$anonfun$result$1",
"scala.collection.immutable.Stream$StreamCanBuildFrom",
"scala.collection.immutable.Stream$StreamWithFilter",
"scala.collection.immutable.Stream$cons$",
"scala.collection.immutable.StreamIterator",
"scala.collection.immutable.StreamIterator$$anonfun$2",
"scala.collection.immutable.StreamIterator$$anonfun$next$1",
"scala.collection.immutable.StreamIterator$$anonfun$toStream$1",
"scala.collection.immutable.StreamIterator$LazyCell",
"scala.collection.immutable.StringLike",
"scala.collection.immutable.StringOps",
"scala.collection.immutable.TrieIterator",
"scala.collection.immutable.Vector",
"scala.collection.immutable.Vector$",
"scala.collection.immutable.Vector$$anon$1",
"scala.collection.immutable.Vector$$anon$2",
"scala.collection.immutable.VectorBuilder",
"scala.collection.immutable.VectorIterator",
"scala.collection.immutable.VectorPointer",
"scala.collection.immutable.WrappedString",
"scala.collection.immutable.WrappedString$",
"scala.collection.immutable.WrappedString$$anonfun$newBuilder$1",
"scala.collection.mutable.ArrayBuffer",
"scala.collection.mutable.ArrayBuffer$",
"scala.collection.mutable.ArrayBuilder",
"scala.collection.mutable.ArrayBuilder$",
"scala.collection.mutable.ArrayBuilder$ofBoolean",
"scala.collection.mutable.ArrayBuilder$ofByte",
"scala.collection.mutable.ArrayBuilder$ofChar",
"scala.collection.mutable.ArrayBuilder$ofDouble",
"scala.collection.mutable.ArrayBuilder$ofFloat",
"scala.collection.mutable.ArrayBuilder$ofInt",
"scala.collection.mutable.ArrayBuilder$ofLong",
"scala.collection.mutable.ArrayBuilder$ofRef",
"scala.collection.mutable.ArrayBuilder$ofShort",
"scala.collection.mutable.ArrayBuilder$ofUnit",
"scala.collection.mutable.ArrayOps",
"scala.collection.mutable.ArrayOps$ofBoolean",
"scala.collection.mutable.ArrayOps$ofByte",
"scala.collection.mutable.ArrayOps$ofChar",
"scala.collection.mutable.ArrayOps$ofDouble",
"scala.collection.mutable.ArrayOps$ofFloat",
"scala.collection.mutable.ArrayOps$ofInt",
"scala.collection.mutable.ArrayOps$ofLong",
"scala.collection.mutable.ArrayOps$ofRef",
"scala.collection.mutable.ArrayOps$ofShort",
"scala.collection.mutable.ArrayOps$ofUnit",
"scala.collection.mutable.Builder",
"scala.collection.mutable.Builder$$anon$1",
"scala.collection.mutable.Cloneable",
"scala.collection.mutable.FlatHashTable$",
"scala.collection.mutable.FlatHashTable$$anon$1",
"scala.collection.mutable.FlatHashTable$HashUtils",
"scala.collection.mutable.FlatHashTable$class",
"scala.collection.mutable.GrowingBuilder",
"scala.collection.mutable.HashSet",
"scala.collection.mutable.HashSet$",
"scala.collection.mutable.HashTable$",
"scala.collection.mutable.IndexedSeq",
"scala.collection.mutable.IndexedSeq$",
"scala.collection.mutable.IndexedSeqLike",
"scala.collection.mutable.Iterable$",
"scala.collection.mutable.LazyBuilder",
"scala.collection.mutable.ListBuffer",
"scala.collection.mutable.ListBuffer$",
"scala.collection.mutable.ListBuffer$$anon$1",
"scala.collection.mutable.Map",
"scala.collection.mutable.MapBuilder",
"scala.collection.mutable.MapLike",
"scala.collection.mutable.ResizableArray",
"scala.collection.mutable.Seq",
"scala.collection.mutable.SeqLike",
"scala.collection.mutable.Set",
"scala.collection.mutable.SetBuilder",
"scala.collection.mutable.SetLike",
"scala.collection.mutable.StringBuilder",
"scala.collection.mutable.StringBuilder$",
"scala.collection.mutable.WrappedArray",
"scala.collection.mutable.WrappedArray$",
"scala.collection.mutable.WrappedArray$ofBoolean",
"scala.collection.mutable.WrappedArray$ofByte",
"scala.collection.mutable.WrappedArray$ofChar",
"scala.collection.mutable.WrappedArray$ofDouble",
"scala.collection.mutable.WrappedArray$ofFloat",
"scala.collection.mutable.WrappedArray$ofInt",
"scala.collection.mutable.WrappedArray$ofLong",
"scala.collection.mutable.WrappedArray$ofRef",
"scala.collection.mutable.WrappedArray$ofShort",
"scala.collection.mutable.WrappedArray$ofUnit",
"scala.collection.mutable.WrappedArrayBuilder",
"scala.math.Numeric",
"scala.math.Numeric$IntIsIntegral$",
"scala.math.Ordered",
"scala.math.Ordering",
"scala.math.Ordering$IntOrdering",
"scala.math.ScalaNumber",
"scala.reflect.AnyValManifest",
"scala.reflect.ClassManifest",
"scala.reflect.ClassManifest$",
"scala.reflect.ClassManifest$$anonfun$subargs$1",
"scala.reflect.ClassTypeManifest",
"scala.reflect.Manifest",
"scala.reflect.Manifest$",
"scala.reflect.Manifest$$anon$1",
"scala.reflect.Manifest$$anon$10",
"scala.reflect.Manifest$$anon$11",
"scala.reflect.Manifest$$anon$12",
"scala.reflect.Manifest$$anon$13",
"scala.reflect.Manifest$$anon$14",
"scala.reflect.Manifest$$anon$2",
"scala.reflect.Manifest$$anon$3",
"scala.reflect.Manifest$$anon$4",
"scala.reflect.Manifest$$anon$5",
"scala.reflect.Manifest$$anon$6",
"scala.reflect.Manifest$$anon$7",
"scala.reflect.Manifest$$anon$8",
"scala.reflect.Manifest$$anon$9",
"scala.reflect.Manifest$ClassTypeManifest",
"scala.reflect.NoManifest$",
"scala.runtime.AbstractFunction0",
"scala.runtime.AbstractFunction1",
"scala.runtime.AbstractFunction1$mcII$sp",
"scala.runtime.AbstractFunction2",
"scala.runtime.AbstractFunction3",
"scala.runtime.ArrayRuntime",
"scala.runtime.BooleanRef",
"scala.runtime.BoxedUnit",
"scala.runtime.IntRef",
"scala.runtime.Nothing$",
"scala.runtime.ObjectRef",
"scala.runtime.OrderedProxy",
"scala.runtime.RichInt",
"scala.runtime.ScalaNumberProxy",
"scala.runtime.ScalaRunTime$",
"scala.runtime.VolatileIntRef",
"scala.util.DynamicVariable",
"scala.util.DynamicVariable$$anon$1",
"scala.util.MurmurHash",
"scala.util.MurmurHash$",
"scala.util.MurmurHash$$anonfun$1",
"scala.util.MurmurHash$$anonfun$2",
"scala.util.MurmurHash$$anonfun$symmetricHash$1",
"xsbt.boot.AppConfiguration",
"xsbt.boot.AppID",
"xsbt.boot.AppProperty",
"xsbt.boot.Application",
"xsbt.boot.Application$",
"xsbt.boot.Boot",
"xsbt.boot.Boot$",
"xsbt.boot.Boot$$anonfun$runImpl$1",
"xsbt.boot.BootConfiguration$",
"xsbt.boot.BootException",
"xsbt.boot.BootFilteredLoader",
"xsbt.boot.BootSetup",
"xsbt.boot.Cache$$anonfun$newEntry$1",
"xsbt.boot.CheckProxy$",
"xsbt.boot.Classifiers",
"xsbt.boot.Comment$",
"xsbt.boot.ComponentProvider",
"xsbt.boot.ComponentProvider$",
"xsbt.boot.ComponentProvider$$anonfun$component$1",
"xsbt.boot.Configuration$",
"xsbt.boot.Configuration$$anonfun$1",
"xsbt.boot.Configuration$$anonfun$configurationOnClasspath$1",
"xsbt.boot.Configuration$$anonfun$configurationOnClasspath$2",
"xsbt.boot.Configuration$$anonfun$configurationOnClasspath$3",
"xsbt.boot.Configuration$$anonfun$parse$1",
"xsbt.boot.ConfigurationParser",
"xsbt.boot.ConfigurationParser$",
"xsbt.boot.ConfigurationParser$$anonfun$1",
"xsbt.boot.ConfigurationParser$$anonfun$11",
"xsbt.boot.ConfigurationParser$$anonfun$12",
"xsbt.boot.ConfigurationParser$$anonfun$2",
"xsbt.boot.ConfigurationParser$$anonfun$3",
"xsbt.boot.ConfigurationParser$$anonfun$4",
"xsbt.boot.ConfigurationParser$$anonfun$5",
"xsbt.boot.ConfigurationParser$$anonfun$6",
"xsbt.boot.ConfigurationParser$$anonfun$7",
"xsbt.boot.ConfigurationParser$$anonfun$8",
"xsbt.boot.ConfigurationParser$$anonfun$9",
"xsbt.boot.ConfigurationParser$$anonfun$apply$3",
"xsbt.boot.ConfigurationParser$$anonfun$file$1",
"xsbt.boot.ConfigurationParser$$anonfun$getAppProperties$1",
"xsbt.boot.ConfigurationParser$$anonfun$getAppProperties$2",
"xsbt.boot.ConfigurationParser$$anonfun$getAppProperties$2$$anonfun$10",
"xsbt.boot.ConfigurationParser$$anonfun$getClassifiers$1",
"xsbt.boot.ConfigurationParser$$anonfun$getLevel$1",
"xsbt.boot.ConfigurationParser$$anonfun$getLevel$2",
"xsbt.boot.ConfigurationParser$$anonfun$getLogging$1",
"xsbt.boot.ConfigurationParser$$anonfun$getRepositories$1",
"xsbt.boot.ConfigurationParser$$anonfun$getVersion$1",
"xsbt.boot.ConfigurationParser$$anonfun$ids$1",
"xsbt.boot.ConfigurationParser$$anonfun$parsePropertyDefinition$1",
"xsbt.boot.ConfigurationParser$$anonfun$processClassifiers$1",
"xsbt.boot.ConfigurationParser$$anonfun$processSection$1",
"xsbt.boot.ConfigurationParser$$anonfun$processSection$1$$anonfun$apply$5",
"xsbt.boot.ConfigurationParser$$anonfun$processVersion$1",
"xsbt.boot.ConfigurationParser$$anonfun$readValue$1",
"xsbt.boot.ConfigurationParser$$anonfun$readValue$1$$anonfun$apply$4",
"xsbt.boot.ConfigurationParser$$anonfun$toFiles$1",
"xsbt.boot.ConfigurationParser$$anonfun$trim$1",
"xsbt.boot.Copy$",
"xsbt.boot.Copy$$anonfun$apply$1",
"xsbt.boot.Copy$$anonfun$apply$2",
"xsbt.boot.Copy$$anonfun$apply$2$$anonfun$apply$3",
"xsbt.boot.Enumeration",
"xsbt.boot.Enumeration$$anonfun$1",
"xsbt.boot.Enumeration$$anonfun$members$1",
"xsbt.boot.Enumeration$$anonfun$members$1$$anonfun$apply$1",
"xsbt.boot.Enumeration$$anonfun$members$1$$anonfun$apply$2",
"xsbt.boot.Enumeration$$anonfun$toValue$1",
"xsbt.boot.Enumeration$$anonfun$toValue$2",
"xsbt.boot.Enumeration$Value",
"xsbt.boot.Explicit",
"xsbt.boot.Find",
"xsbt.boot.Find$",
"xsbt.boot.Find$$anonfun$1",
"xsbt.boot.Find$$anonfun$fromRoot$1$1",
"xsbt.boot.Find$$anonfun$fromRoot$1$2",
"xsbt.boot.Find$$anonfun$xsbt$boot$Find$$hasProject$1",
"xsbt.boot.Implicit",
"xsbt.boot.Implicit$$anonfun$1",
"xsbt.boot.Initialize$",
"xsbt.boot.Initialize$$anonfun$1",
"xsbt.boot.Initialize$$anonfun$1$$anonfun$apply$1",
"xsbt.boot.Initialize$$anonfun$1$$anonfun$apply$2",
"xsbt.boot.Initialize$$anonfun$2",
"xsbt.boot.Initialize$$anonfun$initialize$1",
"xsbt.boot.Initialize$$anonfun$process$1",
"xsbt.boot.Initialize$$anonfun$process$2",
"xsbt.boot.Initialize$$anonfun$selectCreate$1",
"xsbt.boot.Initialize$$anonfun$selectFill$1",
"xsbt.boot.Initialize$$anonfun$selectQuick$1",
"xsbt.boot.IvyOptions",
"xsbt.boot.JLine",
"xsbt.boot.JLine$",
"xsbt.boot.JLine$$anonfun$readLine$1",
"xsbt.boot.Labeled",
"xsbt.boot.Launch",
"xsbt.boot.Launch$",
"xsbt.boot.Launch$$anonfun$1",
"xsbt.boot.Launch$$anonfun$explicit$1",
"xsbt.boot.Launch$$anonfun$initialized$1",
"xsbt.boot.Launch$$anonfun$initialized$2",
"xsbt.boot.Launch$$anonfun$xsbt$boot$Launch$$delete$1",
"xsbt.boot.Launch$JNAProvider",
"xsbt.boot.Launch$ScalaProvider",
"xsbt.boot.Launch$ScalaProvider$AppProvider",
"xsbt.boot.Launch$ScalaProvider$AppProvider$$anonfun$baseDirectories$1",
"xsbt.boot.LaunchConfiguration",
"xsbt.boot.Launcher$",
"xsbt.boot.ListMap",
"xsbt.boot.ListMap$",
"xsbt.boot.ListMap$$anon$1",
"xsbt.boot.ListMap$$anon$1$$anonfun$apply$2",
"xsbt.boot.ListMap$$anonfun$apply$1",
"xsbt.boot.ListMap$$anonfun$get$1",
"xsbt.boot.ListMap$$anonfun$get$2",
"xsbt.boot.ListMap$$anonfun$keys$1",
"xsbt.boot.ListMap$$anonfun$xsbt$boot$ListMap$$remove$1",
"xsbt.boot.Loaders$",
"xsbt.boot.Loaders$$anonfun$loaders$1$1",
"xsbt.boot.Locks$",
"xsbt.boot.Locks$$anonfun$1",
"xsbt.boot.Locks$GlobalLock",
"xsbt.boot.Locks$GlobalLock$$anonfun$withFileLock$1",
"xsbt.boot.Locks$InternalLockNPE",
"xsbt.boot.LogLevel$",
"xsbt.boot.Logging",
"xsbt.boot.ParseException",
"xsbt.boot.ParseLine$",
"xsbt.boot.Pre$",
"xsbt.boot.Pre$$anonfun$assert$1",
"xsbt.boot.PromptProperty",
"xsbt.boot.Provider",
"xsbt.boot.Provider$",
"xsbt.boot.Provider$$anonfun$getJars$1",
"xsbt.boot.Provider$$anonfun$getMissing$1",
"xsbt.boot.Provider$$anonfun$toURLs$1",
"xsbt.boot.Provider$JarFilter$",
"xsbt.boot.Provider$initialize",
"xsbt.boot.ProxyProperties$",
"xsbt.boot.Repository$",
"xsbt.boot.Repository$Ivy",
"xsbt.boot.Repository$Maven",
"xsbt.boot.Repository$Predefined",
"xsbt.boot.Repository$Predefined$",
"xsbt.boot.ResolvePaths$",
"xsbt.boot.ResolvePaths$$anonfun$apply$1",
"xsbt.boot.ResolveValues",
"xsbt.boot.ResolveValues$",
"xsbt.boot.ResolveValues$$anonfun$readProperties$1",
"xsbt.boot.ResolveValues$$anonfun$resolve$1",
"xsbt.boot.ResolveValues$$anonfun$resolve$2",
"xsbt.boot.RunConfiguration",
"xsbt.boot.SbtIvyLogger",
"xsbt.boot.SbtIvyLogger$",
"xsbt.boot.SbtMessageLoggerEngine",
"xsbt.boot.Search",
"xsbt.boot.Search$",
"xsbt.boot.Section",
"xsbt.boot.SetProperty",
"xsbt.boot.SimpleReader$",
"xsbt.boot.Update",
"xsbt.boot.Update$$anon$1",
"xsbt.boot.Update$$anon$2",
"xsbt.boot.Update$$anon$3",
"xsbt.boot.Update$$anonfun$1",
"xsbt.boot.Update$$anonfun$2",
"xsbt.boot.Update$$anonfun$3",
"xsbt.boot.Update$$anonfun$4",
"xsbt.boot.Update$$anonfun$addCredentials$1",
"xsbt.boot.Update$$anonfun$addDependency$1",
"xsbt.boot.Update$$anonfun$addDependency$2",
"xsbt.boot.Update$$anonfun$addResolvers$1",
"xsbt.boot.Update$$anonfun$addResolvers$2",
"xsbt.boot.Update$$anonfun$logExceptions$1",
"xsbt.boot.Update$$anonfun$retrieve$1",
"xsbt.boot.Update$$anonfun$settings$1",
"xsbt.boot.Update$$anonfun$xsbt$boot$Update$$addClassifier$1",
"xsbt.boot.Update$$anonfun$xsbt$boot$Update$$hasImplicitClassifier$1",
"xsbt.boot.Update$ArtifactFilter",
"xsbt.boot.UpdateApp",
"xsbt.boot.UpdateConfiguration",
"xsbt.boot.UpdateScala",
"xsbt.boot.UpdateTarget",
"xsbt.boot.Using$",
"xsbt.boot.Value$",
"xsbti.AppConfiguration",
"xsbti.AppMain",
"xsbti.AppProvider",
"xsbti.ApplicationID",
"xsbti.ComponentProvider",
"xsbti.Continue",
"xsbti.Exit",
"xsbti.FullReload",
"xsbti.GlobalLock",
"xsbti.IvyRepository",
"xsbti.Launcher",
"xsbti.MainResult",
"xsbti.MavenRepository",
"xsbti.Predefined",
"xsbti.PredefinedRepository",
"xsbti.Reboot",
"xsbti.Repository",
"xsbti.RetrieveException",
"xsbti.ScalaProvider").contains(c)).toList //.foldLeft(false) { (result, folded) => result || c.startsWith(folded) } ).toList

      Files.writeFile(new File("/tmp/foobar"), toLoad.sorted.mkString("\n"))

      Logger("play").debug("Loading %s classes".format(toLoad.size))
      for (c <- toLoad) {
        try {
//          println(c)
          allClassesCache.add(app.classloader.loadClass(c))
        } catch {
          case t => // we don't care
        }
      }
    }
    allClassesCache
  }

  def renderTemplate(name: String, args: Map[String, Any]) = {

    try {
      val n = System.currentTimeMillis()
      Logger("play").debug("Loading template " + name)
      val template = GenericTemplateLoader.load(name)
      Logger("play").debug("Starting to render")
      val templateArgs = new ConcurrentHashMap[String, AnyRef](args.map(e => (e._1, e._2.asInstanceOf[AnyRef])).asJava)
      val res = template.render(templateArgs)
      Logger("play").debug("Rendered template %s in %s".format(name, System.currentTimeMillis() - n))
      Right(res)
    } catch {
      case t: Throwable =>
        engine.handleException(t)
        Left(t)
    }

  }

}
